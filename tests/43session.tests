TESTING "Component Test Suite: MObjects and Session/Model" ./test-suite --group=session



PLANNED "AddClip_test" AddClip_test <<END
END


TEST "DefsManager_test" DefsManager_test <<END
return: 0
END


TEST "DefsManagerImpl_test" DefsManagerImpl_test <<END
return: 0
END


TEST "DefsRegistryImpl_test" DefsRegistryImpl_test <<END
return: 0
END


PLANNED "DeleteClip_test" DeleteClip_test <<END
END


TEST "verify MObject interface" MObjectInterface_test <<END
out: Clip\.[0-9]{3}
out: Label\.[0-9]{3}
out: DummyMO\.[0-9]{3}
END


TEST "SessionElementTracker_test" SessionElementTracker_test <<END
END


TEST "Fetching specific elements from Session" SessionElementQuery_test <<END
return: 0
END


TEST "external MObject references" MObjectRef_test <<END
out: MRef-NIL
out: sizeof\( .+MORef.+session.Clip.+ \) =  (32|24)
out: Placement<.+Clip.> .......... use-cnt=4
out: Asset\(VIDEO:lumi.test-1 v1\)
out: Placement<.+Clip.> .......... use-cnt=4
out: MRef-NIL
out: sizeof\( .+MORef.+session.Clip.+ \) =  (32|24)
out: Placement<.+Clip.> .......... use-cnt=4
out: Asset\(VIDEO:lumi.test-2 v1\)
out: Placement<.+Clip.> .......... use-cnt=4
out: MRef-NIL
out: sizeof\( .+MORef.+session.Clip.+ \) =  (32|24)
out: Placement<.+Clip.> .......... use-cnt=4
out: Asset\(VIDEO:lumi.test-1 v1\)
out: Placement<.+Clip.> .......... use-cnt=4
out: MRef-NIL
out: sizeof\( .+MORef.+session.Clip.+ \) =  (32|24)
out: Placement<.+Clip.> .......... use-cnt=4
out: Asset\(VIDEO:lumi.test-2 v1\)
out: Placement<.+Clip.> .......... use-cnt=4
out: MRef-NIL
out: sizeof\( .+MORef.+session.Clip.+ \) =  (32|24)
out: Placement<.+Clip.>.+ use-cnt=4
out: Asset\(VIDEO:lumi.test-1 v1\)
out: Placement<.+Clip.> .......... use-cnt=4
out: MRef-NIL
out: sizeof\( .+MORef.+session.Clip.+ \) =  (32|24)
out: Placement<.+Clip.> .......... use-cnt=4
out: Asset\(VIDEO:lumi.test-1 v1\)
out: Placement<.+Clip.> .......... use-cnt=4
out: MRef-NIL
out: sizeof\( .+MORef.+session.Clip.+ \) =  (32|24)
out: Placement<.+Clip.> .......... use-cnt=4
out: Asset\(VIDEO:lumi.test-2 v1\)
out: Placement<.+Clip.> .......... use-cnt=4
out: Placement<.+Clip.> .......... use-cnt=5
out: \(VIDEO:lumi.test-1 v1\)
END


PLANNED "basic placement properties" PlacementBasic_test <<END
END


PLANNED "object identity" PlacementObjectIdentity_test <<END
END


TEST "hierarchical placement types" PlacementHierarchy_test <<END
out: sizeof\( .+ \) =  [0-9]{2}
out: Placement.+mobject.+test.+TestSubMO1.+. use-cnt=1 .*
out: Placement.+mobject.+test.+TestSubMO2.+. use-cnt=1 .*
out: Placement.+mobject.+test.+TestSubMO21.+ use-cnt=2 .*
out: Placement.+mobject.+session.+Clip.+.... use-cnt=2 .*
out: TestSubMO1\(ID=[0-9]{3}\)
out: TestSubMO2\(ID=[0-9]{3}\)
out: TestSubMO21\(ID=[0-9]{3}\)
out: specialAPI()
out: pID\(\w{6,16}\)
END


TEST "PlacementRef_test" PlacementRef_test <<END
out: Placement<.+TestSubMO21.> ..... use-cnt=2
out: specialAPI()
END


TEST "Placement Index" PlacementIndex_test <<END
out: ^::Placement<.+session.test.TestClip.+ use-cnt=2
out: ^::Placement<.+session.test.TestClip.+ use-cnt=6
out: ^ ::Placement<.+session.test.TestClip.+ use-cnt=6
out: ^  ::Placement<.+session.test.TestClip.+ use-cnt=6
out: ^  ...2 elements at Level 2
out: ^ ::Placement<.+session.test.TestClip.+ use-cnt=6
out: ^ ...3 elements at Level 1
out: ^::Placement<.+session.test.TestClip.+ use-cnt=2
out: ^ ::Placement<.+session.test.TestClip.+ use-cnt=1
out: ^ ...1 elements at Level 1
out: ^...3 elements at Level 0
END


TEST "Querying the index" PlacementIndexQuery_test <<END
out: explore contents depth-first...
out: Placement<.+TestSubMO2.> ...... use-cnt=1
out: Placement<.+TestSubMO1.> ...... use-cnt=1
out: Placement<.+DummyMO.> .......... use-cnt=1
out: Placement<.+TestSubMO21.> ..... use-cnt=1
out: path to root starting at Placement<.+TestSubMO1
out: Placement<.+TestSubMO2.> ...... use-cnt=1
out: Placement<.+session.Label.> ......... use-cnt=1
END


TEST "discovering scopes" ScopeQuery_test <<END
out: --------------------------------Test-1: contents depth-first
out: Placement<.+TestSubMO2.>
out: Placement<.+TestSubMO1.>
out: Placement<.+DummyMO.>
out: Placement<.+TestSubMO21.>
out: --------------------------------Test-2: contents depth-first, filtered to Clip
out: --------------------------------Test-3: contents depth-first, filtered to DummyMO
out: Placement<.+TestSubMO2.>
out: Placement<.+TestSubMO1.>
out: Placement<.+DummyMO.>
out: Placement<.+TestSubMO21.>
out: --------------------------------Test-4: contents depth-first, filtered to TestSubMO1
out: Placement<.+TestSubMO1.>
out: --------------------------------Test-5: contents depth-first, filtered to TestSubMO2
out: Placement<.+TestSubMO2.>
out: Placement<.+TestSubMO21.>
out: --------------------------------Test-6: contents depth-first, custom filtered DummyMO
out: Placement<.+TestSubMO2.>
out: Placement<.+TestSubMO21.>
out: --------------------------------Test-7: parents of the second TestSubMO2 element found
out: Placement<.+TestSubMO21.>
out: Placement<.+mobject.session.Label.>
out: --------------------------------Test-8: children of the this TestSubMO2 element
out: Placement<.+TestSubMO21.>
out: --------------------------------Test-9: path from there to root
out: Placement<.+TestSubMO21.>
out: Placement<.+mobject.session.Label.>
out: --------------------------------Test-10: same path, but filtered to TestSubMO2
out: Placement<.+TestSubMO21.>
out: --------------------------------Test-11: continue exploring partially used TestSubMO2 iterator
out: Placement<.+TestSubMO21.>
return: 0
END


TEST "Placement search scope" PlacementScope_test <<END
out: Scope: \[Label\.[0-9]{3}\]
out: Placement<.+TestSubMO2.>
out: Scope: \[DummyMO\.[0-9]{3}\]
out: Placement<.+TestSubMO1.>
out: Scope: \[Label\.[0-9]{3}\]
out: Placement<.+DummyMO.>
out: Scope: \[Label\.[0-9]{3}\]
out: Placement<.+TestSubMO21.>
out: Scope: \[DummyMO\.[0-9]{3}\]
out: Placement<.+TestSubMO21.>
out: Scope: \[DummyMO\.[0-9]{3}\]
out: Placement<.+TestSubMO21.>
out: Scope: \[DummyMO\.[0-9]{3}\]
out: Placement<.+TestSubMO21.>
out: Scope: \[DummyMO\.[0-9]{3}\]
out: Placement<.+TestSubMO21.>
return: 0
END


TEST "Path of nested scopes" ScopePath_test <<END
out: Step\(1\): /\[DummyMO\.[0-9]{3}\]/\[DummyMO\.[0-9]{3}\]
out: Step\(2\): /\[DummyMO\.[0-9]{3}\]
out: Step\(3\): /
out: Step\(4\): /\[DummyMO\.[0-9]{3}\]
out: Step\(5\): /\[DummyMO\.[0-9]{3}\]/\[DummyMO\.[0-9]{3}\]
out: Step\(6\): /\[DummyMO\.[0-9]{3}\]
return: 0
END


TEST "issuing typed queries" QueryResolver_test <<END
out: Query-Results: sizeof\( .+IterAdapter.+Cursor.+shared_ptr.+Resolution
out: ^6
out: ^5
out: ^4
out: ^3
out: ^2
out: ^1
out: ^0
out: Query-Results: sizeof\( .+IterAdapter.+Cursor.+shared_ptr.+Resolution
out: ^a
out: ^ra
out: ^era
out: ^iera
out: ^miera
out: ^umiera
out: ^Lumiera
END


TEST "Query focus management" QueryFocus_test <<END
out: Focus\(2\)--->/\[DummyMO....\]
out: Focus\(3\)--->/$
out: Focus\(3\)--->/\[DummyMO....\]$
out: Focus\(3\)--->/\[DummyMO....\]/\[DummyMO....\]$
out: Focus\(3\)--->/\[DummyMO....\]/\[DummyMO....\]/\[DummyMO....\]$
out: Focus\(3\)--->/\[DummyMO....\]/\[DummyMO....\]/\[DummyMO....\]/\[DummyMO....\]$
out: Focus\(3\)--->/\[DummyMO....\]/\[DummyMO....\]/\[DummyMO....\]/\[DummyMO....\]/\[DummyMO....\]$
out: Focus\(3\)--->/\[DummyMO....\]/\[DummyMO....\]/\[DummyMO....\]/\[DummyMO....\]/\[DummyMO....\]<<<--discovery exhausted
out: Focus\(2\)--->/\[DummyMO....\]<<<--after pop
out: Focus\(2\)--->/\[DummyMO....\]
return: 0
END


TEST "Query focus stack" QueryFocusStack_test <<END
return: 0
END


PLANNED "RebuildFixture_test" RebuildFixture_test <<END
END


PLANNED "SessionManager_test" SessionManager_test <<END
END


TEST "Accessing session APIs" SessionServiceAccess_test <<END
out: Session not yet used....
out: creating new Session 1
out: Session-Impl\(1\)::externalOperation\(\)
out: creating new Session 2
out: Session-Impl\(2\)::externalOperation\(\)
out: current Session-Impl-ID = 2
out: Session-Impl\(2\)::implementationService\(\)
out: now resetting this session.
out: creating new Session 3
out: Session-Impl\(3\)::implementationService\(\)
out: current Session-Impl-ID = 3
END


PLANNED "Session structure basics" SessionStructure_test <<END
END


PLANNED "modifying session contents" SessionModifyParts_testt <<END
END


PLANNED "Handling of Timelines and Sequences" TimelineSequenceHandling_test <<END
END
